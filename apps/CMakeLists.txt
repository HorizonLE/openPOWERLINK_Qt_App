PROJECT (oplk_apps CXX) 

CMAKE_MINIMUM_REQUIRED (VERSION 2.8.11)

SET(OPLK_APPS_ROOT_DIR ${CMAKE_SOURCE_DIR}/..)
SET(OPLK_APPS_COMMON_DIR ${OPLK_APPS_ROOT_DIR}/apps/common)

#SET(CONFIG_openPOWERLINK_CUSTOM_LIBSEARH_PATH CACHE PATH "Add the path to openPOWERLINK stack LIBRARIES to find")
#SET(CONFIG_openPOWERLINK_ROOT_DIR "../../openPOWERLINK-V2.0.0"  CACHE PATH "Add the path to openPOWERLINK stack V2.0 or later")

IF (WIN32)
	SET(CONFIG_QT_INSTALL_PATH "C:\\Qt\\Qt5.2.0\\5.2.0\\msvc2010" CACHE PATH "Add the QT installation path as same as the sample")
	SET(CONFIG_openPOWERLINK_ROOT_DIR "D:/steps/openPOWERLINK_v2.0_QT"  CACHE PATH "Add the absolute path to openPOWERLINK stack V2.0 or later")
ELSE(WIN32)
	SET(CONFIG_QT_INSTALL_PATH "/opt/Qt5.2.1/5.2.1/gcc" CACHE PATH "Add the QT installation path as same as the sample")
	SET(CONFIG_openPOWERLINK_ROOT_DIR "/home/ramakrishnan/Documents/openPOWERLINK_v2.0_QT" CACHE PATH "Add the absolute path to openPOWERLINK stack V2.0 or later")
ENDIF (WIN32)


SET(OPLK_ROOT_DIR ${CONFIG_openPOWERLINK_ROOT_DIR})
SET(OPLK_INCLUDE_DIR ${OPLK_ROOT_DIR}/stack/include)
SET(OPLK_LIBRARY_DIR "${OPLK_INCLUDE_DIR}/stack/libs/${CMAKE_SYSTEM_NAME}/${CMAKE_SYSTEM_PROCESSOR}")

INCLUDE_DIRECTORIES (${OPLK_INCLUDE_DIR})

IF(CMAKE_SYSTEM_NAME STREQUAL "Linux")
	INCLUDE("${OPLK_APPS_COMMON_DIR}/cmake/configure-linux.cmake")
ELSEIF(CMAKE_SYSTEM_NAME STREQUAL "Windows")
	INCLUDE("${OPLK_APPS_COMMON_DIR}/cmake/configure-windows.cmake")
ELSE()
    MESSAGE(FATAL_ERROR "System ${CMAKE_SYSTEM_NAME} is not supported!")
ENDIF()

INCLUDE("${OPLK_APPS_COMMON_DIR}/cmake/findoplklib.cmake")


SET(CMAKE_PREFIX_PATH ${CONFIG_QT_INSTALL_PATH})

MESSAGE( STATUS "Initial CMAKE_CXX_FLAGS: " ${CMAKE_CXX_FLAGS} )

INCLUDE("${OPLK_APPS_COMMON_DIR}/cmake/configure-compiler.cmake")


OPTION (CONFIG_OPLK_QT_WRAPPER "Build OPLK QT API library for openPOWERLINK v2.x" ON)
OPTION (CONFIG_OPLK_QT_MN_APP "Build OPLK advanced QT GUI for openPOWERLINK v2.x" OFF)


IF(${CONFIG_OPLK_QT_WRAPPER})
	IF (MSVC)
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w34100 /w34189 /Zm200 ")     # from Qt-Creator build
	ENDIF (MSVC)

	MESSAGE( STATUS "CMAKE_CXX_FLAGS: " ${CMAKE_CXX_FLAGS} )

	SET(OPLK_QT_WRAP_DIR ${CMAKE_SOURCE_DIR}/plk_qt_api)
	SET(OPLK_QT_WRAP_INCLUDE_DIR ${OPLK_QT_WRAP_DIR}/include)
	ADD_SUBDIRECTORY(plk_qt_api)
ElSE()
	UNSET(CONFIG_OPLK_QT_WRAP_LIB CACHE)
	UNSET(CONFIG_OPLK_QT_WRAP_WINDOWS_DLL CACHE)
ENDIF(${CONFIG_OPLK_QT_WRAPPER})

IF(${CONFIG_OPLK_QT_MN_APP})
	#On the dependent library
	OPTION (CONFIG_OPLK_QT_WRAPPER "Build OPLK QT API library for openPOWERLINK v2.x" ON)
	IF (MSVC)
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /w34100 /w34189 /Zm200 ")     # from Qt-Creator build :: needed?
	ENDIF (MSVC)

	MESSAGE( STATUS "CMAKE_CXX_FLAGS: " ${CMAKE_CXX_FLAGS} )

	SET(OPLK_QT_MN_APP_DIR ${CMAKE_SOURCE_DIR}/plk_qt_mn_gui)

	ADD_SUBDIRECTORY(plk_qt_mn_gui)
ENDIF(${CONFIG_OPLK_QT_MN_APP})




if(0)
##################FIND OPLK VERSION NUMBER###############
#MACRO(HEX n)
#  ('0' + ((n)>>28 & 0xF)), \
#  ('0' + ((n)>>24 & 0xF)), \
#  ('0' + ((n)>>20 & 0xF)), \
#  ('0' + ((n)>>16 & 0xF)), \
#  ('0' + ((n)>>12 & 0xF)), \
#  ('0' + ((n)>>8  & 0xF)), \
#  ('0' + ((n)>>4  & 0xF)), \
#  ('0' + ((n)     & 0xF))  \
#ENDMACRO(HEX n)

#IF(OPLK_INCLUDE_DIR)
#	set(OPLKLIB_VERSION "")
#	file(STRINGS "${OPLK_INCLUDE_DIR}/oplk/version.h" _OPLKLIB_VERSION_CONTENTS REGEX "#define PLK_DEFINED_STACK_VERSION")
#	SET(OPLKLIB_VERSION HEX(_OPLKLIB_VERSION_CONTENTS))
#	MESSAGE(STATUS "POWERLINK LIB VERSION" ${OPLKLIB_VERSION})
#ENDIF (OPLK_INCLUDE_DIR)

ENDIF(0)
